version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1
  docker: circleci/docker@0.5
jobs:
  build:
    docker:
      - image: circleci/golang:1.12
      - image: circleci/postgres:9.6-alpine
        environment: 
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: finchat
    parallelism: 2
    environment:
      TEST_RESULTS: /tmp/test-results 
    steps:
      - checkout
#      - run: mkdir -p $TEST_RESULTS
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Waiting for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
 #     - run:
 #         name: Run tests
 #         environment:
 #           DB_CONNECTION: "host=localhost port=5432 user=postgres password=postgres dbname=finchat sslmode=disable"
 #         command: |
 #           PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
 #           gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES
      - run: make
      - run: echo $PWD
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
#      - store_artifacts:
#          path: /tmp/test-results
#          destination: raw-test-output
#      - store_test_results:
#          path: /tmp/test-results
      - persist_to_workspace:
          root: .
          paths:
            - dist
  deploy_lambda:
    docker:
      - image: ubuntu:bionic
    steps:
      - attach_workspace:
          at: .
      - aws-cli/setup
      - run: echo $PWD
      - run: ls
      - run:
          name: Upload Lambda
          command: make lambdaupload
  deploy_ecs:
    docker:
      - image: docker
    steps:
      - attach_workspace:
          at: .
      - run: echo $PWD
      - run: ls
      - aws-cli/setup
      - run: $(aws ecr get-login --no-include-email --region us-east-2)
      - run: docker build -t 089576757282.dkr.ecr.us-east-2.amazonaws.com/finchat -f web-release.dockerfile .
      - run: docker push 089576757282.dkr.ecr.us-east-2.amazonaws.com/finchat
workflows:
  version: 2
  build-workflow:
    jobs:
      - build
      - deploy_lambda:
          requires:
          - build
      - deploy_ecs:
          requires:
          - build